<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bkybk.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.bkybk.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="Login_name" property="loginName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="Email" property="email" jdbcType="VARCHAR" />
		<result column="Phone" property="phone" jdbcType="VARCHAR" />
		<result column="Address" property="address" jdbcType="VARCHAR" />
		<result column="last_Login_Time" property="lastLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="Regist_Time" property="registTime" jdbcType="TIMESTAMP" />
		<result column="Category_id" property="categoryId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, Login_name, password, name, Email, Phone, Address, last_Login_Time,
		Regist_Time,
		Category_id
	</sql>
	<sql id="Example_Where_Clause">
		<where>
			<if test="id != null">
				user.id = #{id,jdbcType=INTEGER}
			</if>
			<if test="loginName != null">
				AND user.Login_name like
				CONCAT('%',#{loginName,jdbcType=VARCHAR},'%')
			</if>
			<if test="password != null">
				AND user.password = #{password,jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				AND user.name like
				CONCAT('%',#{name,jdbcType=VARCHAR},'%')
			</if>
			<if test="email != null">
				AND user.Email like
				CONCAT('%',#{email,jdbcType=VARCHAR},'%')
			</if>
			<if test="phone != null">
				AND user.Phone like
				CONCAT('%',#{phone,jdbcType=VARCHAR},'%')
			</if>
			<if test="address != null">
				AND user.Address like
				CONCAT('%',#{address,jdbcType=VARCHAR},'%')
			</if>
			<if test="lastLoginTime != null">
				AND user.last_Login_Time =
				#{lastLoginTime,jdbcType=TIMESTAMP}
			</if>
			<if test="registTime != null">
				AND user.Regist_Time = #{registTime,jdbcType=TIMESTAMP}
			</if>
			<if test="categoryId != null">
				AND user.Category_id = #{categoryId,jdbcType=INTEGER}
			</if>
		</where>
	</sql>

	<select id="findByName" resultMap="BaseResultMap" parameterType="java.lang.Boolean">
		select
		<include refid="Base_Column_List" />
		from user
		where Login_name = #{LoginName,jdbcType=VARCHAR}
	</select>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.bkybk.model.User">
		insert into user (id, Login_name, password,
		name, Email, Phone,
		Address, last_Login_Time, Regist_Time,
		Category_id)
		values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP},
		#{registTime,jdbcType=TIMESTAMP},
		#{categoryId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.bkybk.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="loginName != null">
				Login_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="email != null">
				Email,
			</if>
			<if test="phone != null">
				Phone,
			</if>
			<if test="address != null">
				Address,
			</if>
			<if test="lastLoginTime != null">
				last_Login_Time,
			</if>
			<if test="registTime != null">
				Regist_Time,
			</if>
			<if test="categoryId != null">
				Category_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="registTime != null">
				#{registTime,jdbcType=TIMESTAMP},
			</if>
			<if test="categoryId != null">
				#{categoryId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.bkybk.model.User">
		update user
		<set>
			<if test="loginName != null">
				Login_name = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				Email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				Phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				Address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				last_Login_Time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="registTime != null">
				Regist_Time = #{registTime,jdbcType=TIMESTAMP},
			</if>
			<if test="categoryId != null">
				Category_id = #{categoryId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bkybk.model.User">
		update user
		set Login_name = #{loginName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		Email = #{email,jdbcType=VARCHAR},
		Phone = #{phone,jdbcType=VARCHAR},
		Address = #{address,jdbcType=VARCHAR},
		last_Login_Time = #{lastLoginTime,jdbcType=TIMESTAMP},
		Regist_Time = #{registTime,jdbcType=TIMESTAMP},
		Category_id = #{categoryId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectUserCategory" parameterType="java.lang.Integer"
		resultType="com.bkybk.model.UserCategory">
		SELECT id,uid,cid FROM usercategory where usercategory.uid =
		#{id,jdbcType=INTEGER}
	</select>
	<resultMap type="com.bkybk.model.User" id="userResultMap"
		extends="BaseResultMap">
		<collection property="userCate" column="id" javaType="list"
			select="selectUserCategory" />
	</resultMap>
	<select id="getAll" resultMap="BaseResultMap">
		select id, Login_name, password, name, Email, Phone, Address,
		last_Login_Time, Regist_Time,
		Category_id from user
	</select>

	<resultMap type="com.bkybk.model.User" id="userResultMap2"
		extends="BaseResultMap">
		<collection property="userCate" javaType="list"
			ofType="com.bkybk.model.UserCategory">
			<id property="id" column="usercate_id" />
			<result property="uid" column="user_id" />
			<result property="cid" column="cate_id" />
		</collection>
	</resultMap>
	<select id="getAll2" resultMap="userResultMap2">
		SELECT
		`user`.id,
		`user`.Login_name,
		`user`.`password`,
		`user`.`name`,
		`user`.Email,
		`user`.Phone,
		`user`.Address,
		`user`.last_Login_Time,
		`user`.Regist_Time,
		`user`.Category_id,
		usercategory.id usercate_id,
		usercategory.uid user_id,
		usercategory.cid cate_id
		FROM
		`user`
		JOIN
		usercategory ON `user`.id = usercategory.uid
	</select>

	<resultMap type="com.bkybk.model.User" id="userResultMap3"
		extends="BaseResultMap">
		<collection property="userCate" javaType="list"
			ofType="com.bkybk.model.UserCategory">
			<id property="id" column="usercate_id" />
			<result property="uid" column="user_id" />
			<result property="cid" column="cate_id" />
			<association property="category" javaType="com.bkybk.model.Ucategory">
				<id property="id" column="ucategory_id" />
				<result property="name" column="ucategory_name" />
				<result property="description" column="ucategory_description" />
			</association>
		</collection>
	</resultMap>
	<select id="getAll3" resultMap="userResultMap3">
		SELECT
		`user`.id,
		`user`.Login_name,
		`user`.`password`,
		`user`.`name`,
		`user`.Email,
		`user`.Phone,
		`user`.Address,
		`user`.last_Login_Time,
		`user`.Regist_Time,
		`user`.Category_id,
		usercategory.id usercate_id,
		usercategory.uid user_id,
		usercategory.cid cate_id,
		ucategory.id ucategory_id,
		ucategory.`name` ucategory_name,
		ucategory.description ucategory_description
		FROM
		`user`
		JOIN usercategory ON `user`.id = usercategory.uid
		JOIN ucategory ON usercategory.cid = ucategory.id

	</select>

	<resultMap type="com.bkybk.model.User" id="userResultMap4"
		extends="BaseResultMap">
		<collection property="category" javaType="list"
			ofType="com.bkybk.model.Ucategory">
			<id property="id" column="ucategory_id" />
			<result property="name" column="ucategory_name" />
			<result property="description" column="ucategory_description" />
		</collection>
	</resultMap>
	<select id="getAll4" resultMap="userResultMap4">
		SELECT
		`user`.id,
		`user`.Login_name,
		`user`.`password`,
		`user`.`name`,
		`user`.Email,
		`user`.Phone,
		`user`.Address,
		`user`.last_Login_Time,
		`user`.Regist_Time,
		`user`.Category_id,
		usercategory.id ,
		usercategory.uid ,
		usercategory.cid ,
		ucategory.id ucategory_id,
		ucategory.`name` ucategory_name,
		ucategory.description ucategory_description
		FROM
		`user`
		JOIN usercategory ON `user`.id = usercategory.uid
		JOIN ucategory ON usercategory.cid = ucategory.id

	</select>

	<resultMap type="com.bkybk.model.User" id="userResultMap5"
		extends="BaseResultMap">
		<id property="categoryId" column="ucategory_id" />
		<result property="cname" column="ucategory_name" />
		<result property="cdescription" column="ucategory_description" />
	</resultMap>
	<select id="getAll5" resultMap="userResultMap5">
		SELECT
		`user`.id,
		`user`.Login_name,
		`user`.`password`,
		`user`.`name`,
		`user`.Email,
		`user`.Phone,
		`user`.Address,
		`user`.last_Login_Time,
		`user`.Regist_Time,
		`user`.Category_id,
		usercategory.id ,
		usercategory.uid ,
		usercategory.cid ,
		ucategory.id ucategory_id,
		ucategory.`name` ucategory_name,
		ucategory.description ucategory_description
		FROM
		`user`
		JOIN usercategory ON `user`.id = usercategory.uid
		JOIN ucategory ON usercategory.cid = ucategory.id

	</select>


	<resultMap type="com.bkybk.model.User" id="userResultMap6"
		extends="BaseResultMap">
		<id property="categoryId" column="ucategory_id" />
		<result property="cname" column="ucategory_name" />
		<result property="cdescription" column="ucategory_description" />
	</resultMap>
	<select id="getAll6" resultMap="userResultMap6" parameterType="com.bkybk.model.User">
		SELECT
		`user`.id,
		`user`.Login_name,
		`user`.`password`,
		`user`.`name`,
		`user`.Email,
		`user`.Phone,
		`user`.Address,
		`user`.last_Login_Time,
		`user`.Regist_Time,
		`user`.Category_id,
		usercategory.id ,
		usercategory.uid ,
		usercategory.cid ,
		ucategory.id ucategory_id,
		ucategory.`name` ucategory_name,
		ucategory.description ucategory_description
		FROM
		`user`
		JOIN usercategory ON `user`.id = usercategory.uid
		JOIN ucategory ON usercategory.cid = ucategory.id
		<include refid="Example_Where_Clause" />
		<if test="sort != null">
			ORDER BY ${sort} ${order}
		</if>
		<if test="page!=null">
			LIMIT #{min},#{max}
		</if>
	</select>


	<select id="selectByUserInfo" resultMap="BaseResultMap"
		parameterType="com.bkybk.model.User">
		select
		<include refid="Base_Column_List" />
		from user
		<include refid="Example_Where_Clause" />
	</select>

	<select id="getTotal" parameterType="com.bkybk.model.User"
		resultType="java.lang.Integer">
		select count(id) from user
		<include refid="Example_Where_Clause" />
	</select>

	<select id="selectByUser" resultMap="BaseResultMap"
		parameterType="com.bkybk.model.User">
		select
		<include refid="Base_Column_List" />
		from user
		where Login_name = #{loginName,jdbcType=VARCHAR} and
		password = #{password,jdbcType=VARCHAR}
	</select>
</mapper>